---
# Bring up db tier (redis, mongodb).
- hosts: redis-master
  sudo: yes
  roles:
    - bennojoy.redis

- hosts: mongodb
  sudo: yes
  sudo_user: root
  roles:
    - greendayonfire.mongodb

- hosts: docker-registry
  sudo: yes
  roles:
    - aalda.docker-registry

# tsuru core components.
- hosts: gandalf
  sudo: yes
  roles:
    - gandalf

- hosts: hipache
  sudo: yes
  roles:
    - hipache

- hosts: api
  sudo: yes
  roles:
    - role: tsuru_api
      tags: tsuru_api

- hosts: api
  sudo: yes
  tasks:
    - name: add admin team
      run_once: true
      shell: >
        mongo tsuru --eval 'db.teams.update({_id: "admin"}, {_id: "admin"}, {upsert: true})';
      delegate_to: "{{ groups['mongodb'][0] }}"

    - name: add admin user to admin team
      run_once: true
      shell: >
        mongo tsuru --eval "db.teams.update({_id: 'admin'}, {\$addToSet: {users: '{{admin_user}}'}})";
      delegate_to: "{{ groups['mongodb'][0] }}"

# TODO : handle the case where the user already exists
    - name: add admin user
      run_once: true
      shell: >
        curl -sS -XPOST -d"{\"email\":\"{{admin_user}}\",\"password\":\"{{admin_password}}\"}" "http://127.0.0.1:{{api_port}}/users"

    - name: login with the admin user
      run_once: true
      shell: >
        token=$(curl -sS -XPOST -d"{\"password\":\"{{admin_password}}\"}" "http://127.0.0.1:{{api_port}}/users/{{admin_user}}/tokens" | jq -r .token);
        echo "${token}" > ~/.tsuru_token

- hosts: gandalf
  sudo: yes
  tasks:
    - name: generate tsuru token
      run_once: true
      shell: tsr token
      delegate_to: "{{ groups['api'][0] }}"
      register: tsr_token

    - name: write tsuru token to .bash_profile
      lineinfile:
        state: present
        dest: /home/git/.bash_profile
        regexp: export TSURU_TOKEN=
        line: export TSURU_TOKEN={{ tsr_token.stdout }}

    - name: restart gandalf
      service: name=gandalf-server state=restarted

- hosts: nodes
  sudo: yes
  roles:
    - docker_server

  post_tasks:
    - name: Register node.
      shell: >
        tsuru-admin docker-node-add --register address=http://{{ internal_ip }}:{{ docker_port }}
      delegate_to: "{{ groups['api'][0] }}"

- include: postgres.yml
- include: ssl-proxy.yml
