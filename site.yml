# Bring up db tier (redis, mongodb).
- include: registry.yml
- include: tsuru_db.yml

# tsuru core components.
- hosts: "{{ hosts_prefix }}-tsuru-gandalf*"
  sudo: yes
  vars:
    tsuru_repo: 'ppa:multicloudpaas/tsuru'
  pre_tasks:
      # FIXME: Remove when `tsuru_repo` is deployed.
    - name: Remove upstream APT repo
      apt_repository: repo='ppa:tsuru/ppa' state=absent
  roles:
    - role: gandalf
      tsuru_api_endpoint: "{{ tsuru_api_internal_url }}"

- include: tsuru_api.yml

- hosts: "{{ hosts_prefix }}-tsuru-gandalf*"
  sudo: yes
  tasks:
    - name: generate tsuru token
      run_once: true
      shell: tsr token
      delegate_to: "{{ tsuru_api_host }}"
      register: tsr_token

    - name: write tsuru token to .bash_profile
      lineinfile:
        state: present
        dest: /home/git/.bash_profile
        regexp: export TSURU_TOKEN=
        line: export TSURU_TOKEN={{ tsr_token.stdout }}

    - name: restart gandalf
      service: name=gandalf-server state=restarted

- hosts: "{{ hosts_prefix }}-tsuru-docker*"
  sudo: yes
  roles:
    - docker_server

- hosts: "{{ hosts_prefix }}-tsuru-docker*"
  serial: 1
  sudo: yes
  post_tasks:
    - name: Register node.
      shell: >
        tsuru-admin docker-node-add --register address=http://{{ ansible_default_ipv4.address }}:{{ docker_port }} pool=default </dev/null
      delegate_to: "{{ tsuru_api_host }}"
    - name: Check docker nodes are in the default pool
      shell: >
        tsuru-admin docker-node-list -f pool=default </dev/null
      delegate_to: "{{ tsuru_api_host }}"
      register: docker_node_list
    - name: Update docker node metadata for default pool
      shell: >
        tsuru-admin docker-node-update http://{{ ansible_default_ipv4.address }}:{{ docker_port }} pool=default </dev/null
      delegate_to: "{{ tsuru_api_host }}"
      when: "not ansible_default_ipv4.address in docker_node_list.stdout"

- include: postgres.yml
- include: elasticsearch.yml
- include: router.yml
- include: influx_grafana.yml
- include: post-install.yml
